#include <iostream>
#include <stack>
using namespace std;

int main() {
    string addend, augend;
    while (cin >> addend >> augend) {
        int n1 = addend.size();
        int n2 = augend.size();

        for (int i = 0; i < n1/2; i++) { // 关键一 反转
            char tmp = addend[i];
            addend[i] = addend[n1-1-i];
            addend[n1-1-i] = tmp;
        }
        for (int i = 0; i < n2/2; i++) {
            char tmp = augend[i];
            augend[i] = augend[n2-1-i];
            augend[n2-1-i] = tmp;
        }

        int max = n1 > n2 ? n1 : n2; // 求max而不是min 关键二统一情况
        int carry = 0;
        stack<int> result;
        for (int i = 0; i < max; i++) {
            int re;

            if (i >= n1)
                re = augend[i] - '0' + carry;
            else if (i >= n2)
                re = addend[i] - '0' + carry;
            else
                re = addend[i] - '0' + augend[i] - '0' + carry;

            if (re >= 10) {
                re -= 10;
                carry = 1;
            }
            else
                carry = 0;
            result.push(re);
        }

        if (carry) // 最后的进位
            result.push(1);

        while(!result.empty()) { // stack输出法
            cout << result.top();
            result.pop();
        }
        cout << endl;
    }
     
    return 0;      
}