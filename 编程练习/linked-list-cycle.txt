Given a linked list, determine if it has a cycle in it.
Follow up:
Can you solve it without using extra space?


class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode* p = head;
        ListNode* q = head;
        if(head == NULL || head->next == NULL)//考虑特殊情况
            return false;
        
        while (true) {
            p = p->next;
            if(p == NULL)
                return false;
            q = q->next;
            if(q == NULL)
                return false;
            q = q->next;//不是间隔为1而是步长不同
            if(q == NULL)
                return false;
            if (p == q)
                return true;
        }
    }
};