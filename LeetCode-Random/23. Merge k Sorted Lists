/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    struct cmp{
        bool operator()(ListNode* a, ListNode* b) {
            return a->val > b->val;
        }
    };
    
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        priority_queue<ListNode*, vector<ListNode*>, cmp> pq; // 重载
        for (int i = 0; i < lists.size(); i++)
            if (lists[i])
                pq.push(lists[i]);
        
        ListNode *head = NULL, *tail = NULL;
        while (!pq.empty()) {
            ListNode* p = pq.top();
            pq.pop();
            if (head == NULL) {
                head = p;
                tail = head;
            }
            else {
                tail->next = p;
                tail = tail->next;
            }
            p = p->next; // 关键不需记录属于哪条链
            if (p)
                pq.push(p);
        }
        
        return head;
    }
};