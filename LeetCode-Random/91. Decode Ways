class Solution {
public:
    int check(string& s, int i) {
        if (s[i] == '0')
            return (s[i-1] == '1' || s[i-1] == '2') ? 1 : 0;
        if (s[i-1] == '0' && i-1 == 0) // 01情况
            return -1;

        if (s[i] <= '6' && s[i-1] == '2')
            return 1;
        if (s[i] <= '9' && s[i-1] == '1')
            return 1;
        
        return 0;
    }
    
    int numDecodings(string s) {
        unsigned long long dp[5000]; // 溢出 long不行
        dp[0] = s[0] != '0' ? 1 : 0;
        dp[1] = (s[1] != '0' ? 1 : 0) + check(s, 1); // 运算优先级
        
        for (int i = 2; i < s.size(); i++) {
            dp[i] = s[i] != '0' ? dp[i-1] : 0;
            if (check(s, i))
                dp[i] += dp[i-2];
        }
        
        return dp[s.size()-1];
    }
};