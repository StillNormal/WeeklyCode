class Solution {
public:
    bool search(vector<int>& nums, int target) {
        int left = 0;
        int right = nums.size() - 1;
        int mid;
        while (left <= right) {
            mid = left + (right - left) / 2;
            if (nums[mid] == target)
                return true;
            
            if (nums[mid] < nums[right]) {
                if (nums[mid] < target && target <= nums[right])
                    left = mid + 1;
                else 
                    right = mid - 1;                
            }
            else if (nums[mid] > nums[right]) {
                if (nums[mid] > target && target >= nums[left])
                    right = mid - 1;
                else 
                    left = mid + 1;
            }
            else { // 较之前多了mid和right相等的情况 如 1 1 3 1 及 2 1 1 1  不递增无法判断在左段还是右段
                right--; // 由于mid检验过故right一定不是 那么就去掉right以新mid重新划分
            }            
        }
        return false;
    }
};