/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    /** @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node. */
    ListNode* h;
    Solution(ListNode* head) {
        h = head;
    }
    
    /** Returns a random node's value. */
    int getRandom() { // 蓄水池容量为1
        int num = h->val, cnt = 2; // 防空调用 因此cnt不从1开始
        for (ListNode* p = h->next; p != NULL; p = p->next, cnt++) {
            if (rand() % cnt == 1) {
                num = p->val;
            }
        }
        return num; // OJ重复调5000次判断各区间比例
    }
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(head);
 * int param_1 = obj.getRandom();
 */