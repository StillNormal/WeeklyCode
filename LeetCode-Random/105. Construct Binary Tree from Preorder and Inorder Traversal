/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    
    TreeNode* build(vector<int>& preorder, int p1, int p2, vector<int>& inorder, int i1, int i2) {
        if (p1 > p2 || i1 > i2)
            return NULL;
        
        int root = preorder[p1];
        int i = i1, left_cnt = 0;
        for (i = i1; i <= i2; i++, left_cnt++)
            if (inorder[i] == root)
                break;
        
        
        TreeNode* node = new TreeNode(root);
        node->left = build(preorder, p1+1, p1+left_cnt, inorder, i1, i-1);
        node->right = build(preorder, p1+left_cnt+1, p2, inorder, i+1 , i2);
        return node;
    }
    
    
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        return build(preorder, 0, preorder.size()-1, inorder, 0, inorder.size()-1);
    }
};