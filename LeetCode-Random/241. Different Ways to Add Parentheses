class Solution {
public:
    vector<int> compute(vector<int> a, vector<int> b, char op) {
        vector<int> ans;
        for (int i = 0; i < a.size(); i++) {
            for (int j = 0; j < b.size(); j++) {
                if (op == '+')
                    ans.push_back(a[i] + b[j]);
                else if (op == '-')
                    ans.push_back(a[i] - b[j]);
                else if (op == '*')
                    ans.push_back(a[i] * b[j]);
            }
        }
        return ans;
    }
    
    vector<int> diffWaysToCompute(string input) {
        vector<int> ans;
        int len = input.size();
        bool isNum = true;
        for (int i = 0; i < len; i++) {
            if (input[i] == '+' || input[i] == '-' || input[i] == '*') {
                isNum = false;
                vector<int> tmp = compute(diffWaysToCompute(input.substr(0, i)),
                                      diffWaysToCompute(input.substr(i+1, len)),
                                      input[i]);
                ans.insert(ans.end(), tmp.begin(), tmp.end());
            }
        }
        
        if (isNum) {
            int val = 0;
            for (int i = 0; i < len; i++) {
                val *= 10;
                val += input[i] - '0';
            }
            ans.push_back(val);
        }
        
        return ans;
    }
};