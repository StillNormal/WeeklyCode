/*
在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序
，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和
一个整数，判断数组中是否含有该整数。
*/

class Solution {
public:    
    bool Find(int target, vector<vector<int> > array) { // 别想递归会超时
        if (array.size() == 0 || array[0].size() == 0) // 特殊情况
            return false;
            
        int m = array.size();
        int n = array[0].size();

        // 关键是选好一个出发点 左下角 这样初始只有右上可以走
        // target比该数大 只能在右和下 而因为从下来所以只有右边可走
        int x = m - 1, y = 0;
        while (x >= 0 && y <= m-1) {
            if (array[x][y] == target)
                return true;
            else if (array[x][y] > target)
                x--;
            else
                y++;
        }
        
        return false;
    }
};