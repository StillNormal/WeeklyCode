// 输入一个递增排序的数组和一个数字S，在数组中查找两个数，使得他
// 们的和正好是S，如果有多对数字的和等于S，输出两个数的乘积最小的

class Solution {
public:
    int getPos(vector<int> A, int n, int val) {
        int p = 0, q = n, mid = 0;
        while (p <= q) {
            mid = (p+q) / 2;
            if (A[mid] == val)
                return mid;
            else if (A[mid] < val)
                p = mid + 1;
            else 
                q = mid - 1;
        }
        
        return -1;
    }

    vector<int> FindNumbersWithSum(vector<int> array,int sum) {
        int diff = -1;
        vector<int> an;
        for (int i = 0; i < array.size(); i++) {
            int pos = getPos(array, array.size(), sum - array[i]);
            if (pos == -1 || pos <= i)
                continue;
            else {
                if (array[pos] - array[i] > diff) { // 关键 数学关键
                    diff = array[pos] - array[i];
                    an.clear();
                    an.push_back(array[i]);
                    an.push_back(array[pos]);
                }
            }
        }
        return an;
    }
};