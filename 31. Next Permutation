class Solution {
public:
    void nextPermutation(vector<int>& nums) {       
        if (nums.size() <= 1) // 特殊情况
            return;
        
        // 从后向前找第一个不再递增的数A 将序列分为左右段 此时右段的排列已尽
        // 例12345 12354 12435 12453 12534 12543 ????? A为2
        int index = 0;
        for (int i = nums.size() - 1; i >= 1; i--) {
            if (nums[i] > nums[i - 1]) {
                index = i - 1;
                break;
            }
        }
        // 在右段中找一个仅稍大于此数的数B B为3
        int index2;
        int oldVal = 9999;
        for (int i = index; i < nums.size(); i++) {
            if (nums[i] > nums[index] && nums[i] < oldVal) {
                index2 = i;
                oldVal = nums[i];
            }
        }
        if (oldVal == 9999) { // 特殊情况 全逆序从新开始
            sort(nums.begin(), nums.end());
            return;
        }
        // 以B开始作新序列 将A换到右段去 12543 -> 13452
        int tmp = nums[index];
        nums[index] = nums[index2];
        nums[index2] = tmp;
        // 右段开始新序列 13452 - > 13245
        sort(nums.begin() + index + 1, nums.end());
        
        return;
    }
};
