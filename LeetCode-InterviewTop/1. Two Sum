class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int, int> hashMap;
        vector<int> answer;
        for (int i = 0; i < nums.size(); i++)
            hashMap[nums[i]] = i; // 存每个数的下标
        
        // O(nlogn)排序后两边逼近，但不在线性复杂度
        // 这里直接遍历 对每个数用哈希查找O(1) 
        for (int i = 0; i< nums.size(); i++) {
            int otherNum = target - nums[i];
            unordered_map<int, int>::iterator iter = hashMap.find(otherNum);
            if (iter != hashMap.end() && iter->second != i) { // 且不能找自己
                answer.push_back(i);
                answer.push_back(iter->second);
                break;
            }
        }
        return answer;
    }
};
