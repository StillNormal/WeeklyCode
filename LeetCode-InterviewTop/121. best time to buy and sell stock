class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int n = prices.size();
        if (n == 0)
            return 0;
        
        int* dp = new int[n];
        memset(dp, 0, n);
        int min_price = prices[0];
        
        for (int i = 1; i < n; i++) {
            dp[i] = max(dp[i-1], prices[i] - min_price); // 是动态规划 但别想着太复杂
            min_price = min(min_price, prices[i]);
        }
        
        return dp[n-1];
    }
};